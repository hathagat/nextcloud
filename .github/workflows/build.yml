name: Image Build

on:
  push:
    branches:
    - master
  schedule:
  - cron:  '0 1 * * 0'
  workflow_dispatch:

env:
  NEXTCLOUD_VERSION: 30
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Checkout upstream files
      run: |
        git clone --depth 1 https://github.com/nextcloud/docker.git repo
        mv repo/.examples/dockerfiles/full/fpm/Dockerfile Dockerfile
        mv repo/.examples/dockerfiles/full/fpm/supervisord.conf supervisord.conf
        mv repo/.examples/docker-compose/with-nginx-proxy/postgres/fpm/web/nginx.conf nginx.conf
        rm -r repo

    - name: Update files
      run: |
        # Dockerfile
        sed -i 's/nextcloud:fpm/nextcloud:${{ env.NEXTCLOUD_VERSION }}-fpm/g' Dockerfile
        sed -i 's/#       libreoffice/        nginx/g' Dockerfile
        sed -i '/^    \/var\/run\/supervisord.*/a    ; chown 33:33 \/var\/www\/data \\' Dockerfile
        sed -i '/^COPY supervisord.conf.*/a COPY php-fpm.conf \/usr\/local\/etc\/php-fpm.d\/zzz-nextcloud.conf' Dockerfile
        sed -i '/^COPY supervisord.conf.*/a COPY --chown=33:33 nginx.conf \/etc\/nginx\/' Dockerfile

        # Nginx
        sed -i '/^pid        .*/a daemon off;' nginx.conf
        sed -i 's/listen 80/listen 9000/g' nginx.conf
        sed -i 's/server app:9000/server unix:\/run\/php-fpm.sock/g' nginx.conf
        sed -i 's/client_max_body_size 512M/client_max_body_size 0/g' nginx.conf
        sed -i 's/gzip on/gzip off/g' nginx.conf

        # Supervisord
        cat >> supervisord.conf <<END
        
        [program:nginx]
        stdout_logfile=/dev/stdout
        stdout_logfile_maxbytes=0
        stderr_logfile=/dev/stderr
        stderr_logfile_maxbytes=0
        command=/usr/sbin/nginx
        
        END

    - name: Commit updates
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          git config --local user.email "workflow@github.com"
          git config --local user.name "GitHub Workflow"
          git add -A
          git commit -m "Apply updates from Nextcloud repository"
        fi
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true

  build:
    needs: update
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.update.outputs.commit_hash }}
        
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            ${{ env.NEXTCLOUD_VERSION }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign -y {}@${{ steps.build-and-push.outputs.digest }}

  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
